//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApp.ServiceBankReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Credential", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Model")]
    [System.SerializableAttribute()]
    public partial class Credential : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Token", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Model")]
    [System.SerializableAttribute()]
    public partial class Token : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeToLiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeToLive {
            get {
                return this.TimeToLiveField;
            }
            set {
                if ((this.TimeToLiveField.Equals(value) != true)) {
                    this.TimeToLiveField = value;
                    this.RaisePropertyChanged("TimeToLive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Model")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Exceptions")]
    [System.SerializableAttribute()]
    public partial class TokenFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transfer", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Model")]
    [System.SerializableAttribute()]
    public partial class Transfer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountToField;
        
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountFrom {
            get {
                return this.AccountFromField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountFromField, value) != true)) {
                    this.AccountFromField = value;
                    this.RaisePropertyChanged("AccountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountTo {
            get {
                return this.AccountToField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountToField, value) != true)) {
                    this.AccountToField = value;
                    this.RaisePropertyChanged("AccountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryOfAccount", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Model")]
    [System.SerializableAttribute()]
    public partial class HistoryOfAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountOfAllPagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApp.ServiceBankReference.Operation[] OperationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfAllPages {
            get {
                return this.CountOfAllPagesField;
            }
            set {
                if ((this.CountOfAllPagesField.Equals(value) != true)) {
                    this.CountOfAllPagesField = value;
                    this.RaisePropertyChanged("CountOfAllPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPage {
            get {
                return this.CurrentPageField;
            }
            set {
                if ((this.CurrentPageField.Equals(value) != true)) {
                    this.CurrentPageField = value;
                    this.RaisePropertyChanged("CurrentPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApp.ServiceBankReference.Operation[] Operations {
            get {
                return this.OperationsField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationsField, value) != true)) {
                    this.OperationsField = value;
                    this.RaisePropertyChanged("Operations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Operation", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Model")]
    [System.SerializableAttribute()]
    public partial class Operation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceBankReference.IServiceBank")]
    public interface IServiceBank {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/Login", ReplyAction="http://tempuri.org/IServiceBank/LoginResponse")]
        ClientApp.ServiceBankReference.Token Login(ClientApp.ServiceBankReference.Credential credential);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/Login", ReplyAction="http://tempuri.org/IServiceBank/LoginResponse")]
        System.Threading.Tasks.Task<ClientApp.ServiceBankReference.Token> LoginAsync(ClientApp.ServiceBankReference.Credential credential);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/GetAccounts", ReplyAction="http://tempuri.org/IServiceBank/GetAccountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApp.ServiceBankReference.TokenFault), Action="http://tempuri.org/IServiceBank/GetAccountsTokenFaultFault", Name="TokenFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Exceptions")]
        ClientApp.ServiceBankReference.Account[] GetAccounts(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/GetAccounts", ReplyAction="http://tempuri.org/IServiceBank/GetAccountsResponse")]
        System.Threading.Tasks.Task<ClientApp.ServiceBankReference.Account[]> GetAccountsAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/PayIn", ReplyAction="http://tempuri.org/IServiceBank/PayInResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApp.ServiceBankReference.TokenFault), Action="http://tempuri.org/IServiceBank/PayInTokenFaultFault", Name="TokenFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Exceptions")]
        void PayIn(string token, int amount, string accountTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/PayIn", ReplyAction="http://tempuri.org/IServiceBank/PayInResponse")]
        System.Threading.Tasks.Task PayInAsync(string token, int amount, string accountTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/PayOut", ReplyAction="http://tempuri.org/IServiceBank/PayOutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApp.ServiceBankReference.TokenFault), Action="http://tempuri.org/IServiceBank/PayOutTokenFaultFault", Name="TokenFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Exceptions")]
        void PayOut(string token, int amount, string accountFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/PayOut", ReplyAction="http://tempuri.org/IServiceBank/PayOutResponse")]
        System.Threading.Tasks.Task PayOutAsync(string token, int amount, string accountFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/Transfer", ReplyAction="http://tempuri.org/IServiceBank/TransferResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApp.ServiceBankReference.TokenFault), Action="http://tempuri.org/IServiceBank/TransferTokenFaultFault", Name="TokenFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Exceptions")]
        void Transfer(string token, ClientApp.ServiceBankReference.Transfer transferSoapModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/Transfer", ReplyAction="http://tempuri.org/IServiceBank/TransferResponse")]
        System.Threading.Tasks.Task TransferAsync(string token, ClientApp.ServiceBankReference.Transfer transferSoapModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/GetHistoryOfAccount", ReplyAction="http://tempuri.org/IServiceBank/GetHistoryOfAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApp.ServiceBankReference.TokenFault), Action="http://tempuri.org/IServiceBank/GetHistoryOfAccountTokenFaultFault", Name="TokenFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogic.Exceptions")]
        ClientApp.ServiceBankReference.HistoryOfAccount GetHistoryOfAccount(string token, string account, int currentPage, int sizePage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/GetHistoryOfAccount", ReplyAction="http://tempuri.org/IServiceBank/GetHistoryOfAccountResponse")]
        System.Threading.Tasks.Task<ClientApp.ServiceBankReference.HistoryOfAccount> GetHistoryOfAccountAsync(string token, string account, int currentPage, int sizePage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceBankChannel : ClientApp.ServiceBankReference.IServiceBank, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceBankClient : System.ServiceModel.ClientBase<ClientApp.ServiceBankReference.IServiceBank>, ClientApp.ServiceBankReference.IServiceBank {
        
        public ServiceBankClient() {
        }
        
        public ServiceBankClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceBankClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBankClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBankClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientApp.ServiceBankReference.Token Login(ClientApp.ServiceBankReference.Credential credential) {
            return base.Channel.Login(credential);
        }
        
        public System.Threading.Tasks.Task<ClientApp.ServiceBankReference.Token> LoginAsync(ClientApp.ServiceBankReference.Credential credential) {
            return base.Channel.LoginAsync(credential);
        }
        
        public ClientApp.ServiceBankReference.Account[] GetAccounts(string token) {
            return base.Channel.GetAccounts(token);
        }
        
        public System.Threading.Tasks.Task<ClientApp.ServiceBankReference.Account[]> GetAccountsAsync(string token) {
            return base.Channel.GetAccountsAsync(token);
        }
        
        public void PayIn(string token, int amount, string accountTo) {
            base.Channel.PayIn(token, amount, accountTo);
        }
        
        public System.Threading.Tasks.Task PayInAsync(string token, int amount, string accountTo) {
            return base.Channel.PayInAsync(token, amount, accountTo);
        }
        
        public void PayOut(string token, int amount, string accountFrom) {
            base.Channel.PayOut(token, amount, accountFrom);
        }
        
        public System.Threading.Tasks.Task PayOutAsync(string token, int amount, string accountFrom) {
            return base.Channel.PayOutAsync(token, amount, accountFrom);
        }
        
        public void Transfer(string token, ClientApp.ServiceBankReference.Transfer transferSoapModel) {
            base.Channel.Transfer(token, transferSoapModel);
        }
        
        public System.Threading.Tasks.Task TransferAsync(string token, ClientApp.ServiceBankReference.Transfer transferSoapModel) {
            return base.Channel.TransferAsync(token, transferSoapModel);
        }
        
        public ClientApp.ServiceBankReference.HistoryOfAccount GetHistoryOfAccount(string token, string account, int currentPage, int sizePage) {
            return base.Channel.GetHistoryOfAccount(token, account, currentPage, sizePage);
        }
        
        public System.Threading.Tasks.Task<ClientApp.ServiceBankReference.HistoryOfAccount> GetHistoryOfAccountAsync(string token, string account, int currentPage, int sizePage) {
            return base.Channel.GetHistoryOfAccountAsync(token, account, currentPage, sizePage);
        }
    }
}
